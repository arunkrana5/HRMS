@model ClientsTran.Add



@using (Ajax.BeginForm("_ClientsTranAdd", "Masters",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_ClientsTranAddForm" })
    )
{


    @Html.HiddenFor(x => Model.ClientTranID)
    @Html.HiddenFor(x => Model.ClientID)
<div class="row">
    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label> Name<sup>*</sup></label>
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Code<sup>*</sup> </label>
        @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Print Name<sup>*</sup> </label>
        @Html.TextBoxFor(model => model.PrintName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PrintName, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>GST No<sup>*</sup> </label>
        @Html.TextBoxFor(model => model.GSTNo, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.GSTNo, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>PAN <sup>*</sup></label>
        @Html.TextBoxFor(model => model.PAN, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Commission (%)<sup>*</sup></label>
        @Html.TextBoxFor(model => model.Commission, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Commission, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Country <sup>*</sup></label>
        @Html.DropDownListFor(x => Model.CountryID, new SelectList(Model.CountryList, "ID", "Name", Model.CountryID), "Select", new { @class = "form-control  applyselect" })
        @Html.ValidationMessageFor(model => Model.CountryID, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>State <sup>*</sup></label>
        @Html.DropDownListFor(x => Model.StateID, new SelectList(Model.StateList, "ID", "Name", Model.StateID), "Select", new { @class = "form-control  applyselect"})
        @Html.ValidationMessageFor(model => Model.StateID, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 form-group">
        <label>Address <sup>*</sup></label>
        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Zip Code <sup>*</sup></label>
        @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Phone</label>
        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Email</label>
        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-3 col-md-3 col-sm-3 form-group">
        <label>Priority</label>
        @Html.TextBoxFor(model => model.Priority, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-12 form-group">

        @if (Model.ClientTranID > 0)
        {
            <button type="submit" class="btn btn-indigo" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
        }
        else
        {
            <button type="submit" class="btn btn-indigo" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Submit</button>
        }
    </div>

</div>
}